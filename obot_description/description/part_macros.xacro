<?xml version="1.0"?>
<robot name="obot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <!-- These make use of xacro's mathematical functionality -->
    
    <xacro:macro name="insert_drive_wheel_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <xacro:unless value="${gazebo_visual}">
                    <mesh filename="package://obot_description/meshes/wheel.stl"/>
                </xacro:unless>
                <xacro:if value="${gazebo_visual}">
                    <mesh filename="$(find obot_description)/meshes/wheel.stl"/>
                </xacro:if>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.05" length="0.02"/>
            </geometry>
        </collision>

        <xacro:inertial_cylinder mass="0.8" length="0.02" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </xacro:macro>




    <xacro:macro name="insert_caster_wheel_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <xacro:unless value="${gazebo_visual}">
                    <mesh filename="package://obot_description/meshes/caster_wheel.stl"/>
                </xacro:unless>
                <xacro:if value="${gazebo_visual}">
                    <mesh filename="$(find obot_description)/meshes/caster_wheel.stl"/>
                </xacro:if>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.019" length="0.02"/>
            </geometry>
        </collision>
        
        <xacro:inertial_cylinder mass="0.4" length="0.02" radius="0.019">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </xacro:macro>



    <xacro:macro name="insert_caster_holder_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <xacro:unless value="${gazebo_visual}">
                    <mesh filename="package://obot_description/meshes/caster_holder.stl"/>
                </xacro:unless>
                <xacro:if value="${gazebo_visual}">
                    <mesh filename="$(find obot_description)/meshes/caster_holder.stl"/>
                </xacro:if>
            </geometry>
            <material name="silver"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <xacro:unless value="${gazebo_visual}">
                    <mesh filename="package://obot_description/meshes/caster_holder.stl"/>
                </xacro:unless>
                <xacro:if value="${gazebo_visual}">
                    <mesh filename="$(find obot_description)/meshes/caster_holder.stl"/>
                </xacro:if>
            </geometry>
        </collision>

        <xacro:inertial_cylinder mass="0.2" length="0.04" radius="0.02">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </xacro:macro>


    <xacro:macro name="insert_support" params="x y">
        <visual>
            <origin xyz="${x} ${y} ${slab_height/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.01" length="${slab_height}"/>
            </geometry>
            <material name="white"/>
        </visual>

        <collision>
            <origin xyz="${x} ${y} ${slab_height/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.01" length="${slab_height}"/>
            </geometry>
        </collision>
    </xacro:macro>





    <xacro:macro name="box_with_fillet" params="x y z size_x size_y size_z fillet_radius material">
            <!-- logitudinal box -->
            <visual>
                <origin xyz="${x} ${y} ${z}" rpy="0 0 0"/>
                <geometry>
                    <box size="${size_x} ${size_y-(2*fillet_radius)} ${size_z}"/>
                </geometry>
                <material name="${material}"/>
            </visual>
            <collision>
                <origin xyz="${x} ${y} ${z}" rpy="0 0 0"/>
                <geometry>
                    <box size="${size_x} ${size_y-(2*fillet_radius)} ${size_z}"/>
                </geometry>
            </collision>
            
            <!-- lateral box -->
            <visual>
                <origin xyz="${x} ${y} ${z}" rpy="0 0 0"/>
                <geometry>
                    <box size="${size_x-(2*fillet_radius)} ${size_y} ${size_z}"/>
                </geometry>
                <material name="${material}"/>
            </visual>
            <collision>
                <origin xyz="${x} ${y} ${z}" rpy="0 0 0"/>
                <geometry>
                    <box size="${size_x-(2*fillet_radius)} ${size_y} ${size_z}"/>
                </geometry>
            </collision>

            <!-- cylinder1 -->
            <visual>
                <origin xyz="${x+((size_x/2)-fillet_radius)} ${y+((size_y/2)-fillet_radius)} ${z}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${size_z}" radius="${fillet_radius}"/>
                </geometry>
                <material name="${material}"/>
            </visual>
            <collision>
                <origin xyz="${x+((size_x/2)-fillet_radius)} ${y+((size_y/2)-fillet_radius)} ${z}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${size_z}" radius="${fillet_radius}"/>
                </geometry>
            </collision>

            <!-- cylinder2 -->
            <visual>
                <origin xyz="${x+((size_x/2)-fillet_radius)} ${y-((size_y/2)-fillet_radius)} ${z}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${size_z}" radius="${fillet_radius}"/>
                </geometry>
                <material name="${material}"/>
            </visual>
            <collision>
                <origin xyz="${x+((size_x/2)-fillet_radius)} ${y-((size_y/2)-fillet_radius)} ${z}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${size_z}" radius="${fillet_radius}"/>
                </geometry>
            </collision>

            <!-- cylinder3 -->
            <visual>
                <origin xyz="${x-((size_x/2)-fillet_radius)} ${y+((size_y/2)-fillet_radius)} ${z}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${size_z}" radius="${fillet_radius}"/>
                </geometry>
                <material name="${material}"/>
            </visual>
            <collision>
                <origin xyz="${x-((size_x/2)-fillet_radius)} ${y+((size_y/2)-fillet_radius)} ${z}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${size_z}" radius="${fillet_radius}"/>
                </geometry>
            </collision>

            <!-- cylinder4 -->
            <visual>
                <origin xyz="${x-((size_x/2)-fillet_radius)} ${y-((size_y/2)-fillet_radius)} ${z}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${size_z}" radius="${fillet_radius}"/>
                </geometry>
                <material name="${material}"/>
            </visual>
            <collision>
                <origin xyz="${x-((size_x/2)-fillet_radius)} ${y-((size_y/2)-fillet_radius)} ${z}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${size_z}" radius="${fillet_radius}"/>
                </geometry>
            </collision>
    </xacro:macro>







    <xacro:property name="wheel_radius" value="0.05"/>
    <xacro:property name="wheel_width" value="0.02"/>
    <xacro:property name="wheel_mass" value="0.5"/>
    <xacro:property name="wheel_color" value="black"/>
    <xacro:property name="rim_color" value="red"/>


   <xacro:macro name="insert_drive_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <material name="${wheel_color}"/>
        </visual>
        <collision>
           <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </xacro:macro>


    <xacro:macro name="insert_wheel_rim">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.01 ${wheel_radius*1.2} ${wheel_width+0.005}"/>
            </geometry>
            <material name="${rim_color}"/>
        </visual>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
            <geometry>
                <box size="0.01 ${wheel_radius*1.2} ${wheel_width+0.005}"/>
            </geometry>
            <material name="${rim_color}"/>
        </visual>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 ${-pi/4}"/>
            <geometry>
                <box size="0.01 ${wheel_radius*1.2} ${wheel_width+0.005}"/>
            </geometry>
            <material name="${rim_color}"/>
        </visual>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 ${pi/4}"/>
            <geometry>
                <box size="0.01 ${wheel_radius*1.2} ${wheel_width+0.005}"/>
            </geometry>
            <material name="${rim_color}"/>
        </visual>
    </xacro:macro>

    
</robot>